{
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "node": true,
    "commonjs": true,
    "mocha": true
  },
  "plugins": [
    "react"
  ],
  "ecmaFeatures": {
    "arrowFunctions": true,
    "classes": true,
    "templateStrings": true,
    "jsx": true
  },
  "rules": {
    // All eslint rules: http://eslint.org/docs/rules/
    "strict": [1, "global"],

    // Possible errors
//    "comma-dangle": [1, "always-multiline"],
    "no-cond-assign": [2, "always"],
//    "no-console": 1,
    "no-constant-condition": 1,
    "no-control-regex": 2,
    "no-debugger": 1,
    "no-dupe-args": 2,
    "no-dupe-keys": 2,
    "no-duplicate-case": 2,
    "no-empty-character-class": 2,
    "no-empty": 1,
    "no-ex-assign": 2,
    "no-extra-boolean-cast": 1,
    "no-extra-semi": 1,
    "no-func-assign": 2,
    "no-inner-declarations": 2,
    "no-invalid-regexp": 2,
    "no-irregular-whitespace": 2,
    "no-negated-in-lhs": 2,
    "no-regex-spaces": 2,
    "no-sparse-arrays": 2,
    "no-unreachable": 1,
    "use-isnan": 2,
    "valid-jsdoc": [1, {"requireParamDescription": false, "requireReturn": false}],
    "valid-typeof": 2,
    "no-unexpected-multiline": 1,

    // Best practices
    "consistent-return": 2,
    "curly": 2,
    "dot-notation": 1,
    "dot-location": [1, "property"],
    "eqeqeq": 2,
    "no-alert": 1,
    "no-caller": 2,
    "no-div-regex": 2,
    "no-else-return": 1,
    "no-empty-label": 2,
    "no-eval": 2,
    "no-floating-decimal": 1,
    "no-implied-eval": 2,
    "no-labels": 2,
    "no-lone-blocks": 2,
    "no-loop-func": 2,
    "no-multi-str": 1,
    "no-native-reassign": 2,
    "no-new-func": 2,
    "no-new-wrappers": 2,
    "no-new": 1,
    "no-octal-escape": 2,
    "no-octal": 2,
    // @TODO http://eslint.org/docs/rules/no-process-env
    "no-proto": 2,
    // @TODO http://eslint.org/docs/rules/no-redeclare
    "no-return-assign": 2,
    "no-script-url": 2,
    "no-self-compare": 1,
    "no-sequences": 2,
    "no-throw-literal": 1,
    "no-unused-expressions": 1,
    "no-useless-call": 1,
    "no-void": 2,
    "no-warning-comments": [1, {"terms": ["@nocommit"], "location": "anywhere"}],
    "no-with": 2,
    "wrap-iife": 1,
    "yoda": [1, "never"],

    // Variables
    "no-catch-shadow": 2,
    "no-delete-var": 2,
    "no-label-var": 2,
    "no-shadow-restricted-names": 2,
    "no-shadow": 2,
    "no-undef-init": 2,
    "no-undef": 2,
    "no-unused-vars": 1,
    "no-use-before-define": 1,

    // Node.js & CommonJS
    "no-mixed-requires": 2,
    "no-new-require": 2,
    "no-path-concat": 1,

    // Stylistic Issues
    "array-bracket-spacing": [1, "never"],
    "block-spacing": [1, "always"],
    "brace-style": [1, "1tbs"],
    // http://eslint.org/docs/rules/camelcase
    "comma-spacing": 1,
    "comma-style": [1, "last"],
    "computed-property-spacing": [1, "never"],
    "consistent-this": [1, "this"],
    "eol-last": 1,
    // http://eslint.org/docs/rules/func-names
    "jsx-quotes": [1, "prefer-single"],
    "key-spacing": [1, {"beforeColon": false, "afterColon": true, "mode": "minimum"}],
    // http://eslint.org/docs/rules/lines-around-comment
    "linebreak-style": [1, "unix"],
    "new-cap": 1,
    "new-parens": 1,
    "no-array-constructor": 1,
    "no-lonely-if": 1,
    "no-mixed-spaces-and-tabs": 1,
    "no-multiple-empty-lines": [1, {"max": 5}],
    "no-nested-ternary": 1,
    "no-new-object": 1,
    // http://eslint.org/docs/rules/no-restricted-syntax
    "no-spaced-func": 1,
    "no-trailing-spaces": 1,
    "no-unneeded-ternary": 1,
    "object-curly-spacing": [1, "never"],
    "one-var": [2, "never"],
    // http://eslint.org/docs/rules/operator-linebreak
    // http://eslint.org/docs/rules/quote-props
    "quotes": [1, "single", "avoid-escape"],
    // http://eslint.org/docs/rules/require-jsdoc
    "semi-spacing": [1, {"before": false, "after": true}],
    "semi": 1,
    "space-after-keywords": [1, "always"],
    "space-before-keywords": [1, "always"],
    "space-before-blocks": [1, "always"],
    "space-before-function-paren": [1, "always"],
    "space-in-parens": [1, "never"],
    "space-infix-ops": 1,
    "space-return-throw-case": 1,
    "space-unary-ops": [1, {"words": true, "nonwords": false}],
//    "spaced-comment": [1, "always"],

    // EcmaScript 6
    "arrow-parens": [1, "always"],
    "arrow-spacing": [1, {"before": true, "after": true}],
    "constructor-super": 1,
    // http://eslint.org/docs/rules/generator-star-spacing
    "no-class-assign": 1,
    "no-const-assign": 1,
    "no-dupe-class-members": 1,
    "no-this-before-super": 1,
    // http://eslint.org/docs/rules/no-var
    "prefer-arrow-callback": 1,
    // http://eslint.org/docs/rules/prefer-const
    "prefer-spread": 1,
    // http://eslint.org/docs/rules/prefer-reflect
    // http://eslint.org/docs/rules/prefer-template
    // http://eslint.org/docs/rules/require-yield



    // React plugin rules
    // Full list: https://github.com/yannickcr/eslint-plugin-react
    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/forbid-prop-types.md
    "react/jsx-boolean-value": 1,
    "react/jsx-closing-bracket-location": [1, "props-aligned"],
    "react/jsx-curly-spacing": [1, "never"],
    "react/jsx-max-props-per-line": [1, {"maximum": 3}],
    "react/jsx-no-duplicate-props": [1, {"ignoreCase": true}],
    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-literals.md
    "react/jsx-no-undef": 1,
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/no-direct-mutation-state": 1,
    "react/no-multi-comp": 1,
    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-set-state.md
    "react/no-unknown-property": 1,
    "react/prop-types": [1, {"ignore": ["children"]}],
    "react/react-in-jsx-scope": 1,
    "react/self-closing-comp": 1,
    "react/sort-comp": [1, {
      "order": [
        "lifecycle",
        "event-handlers",
        "render-helpers",
        "everything-else",
        "prop-types"
      ],
      "groups": {
        "lifecycle": [
          "constructor",
          "componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "render",
          "componentDidUpdate",
          "componentWillUnmount"
        ],
        "event-handlers": [
          "/^handle.+$/",
          "/^on.+$/"
        ],
        "render-helpers": [
          "/^render.+$/"
        ],
        "prop-types": [
          "getDefaultProps",
          "propTypes"
        ]
      }
    }],
    "react/wrap-multilines": 1
  }
}
